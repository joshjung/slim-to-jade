{
  "author": {
    "name": "Pierre Curto"
  },
  "name": "ev",
  "description": "Fast event emitter - compatible with node's EventEmitter but faster!",
  "keywords": [
    "event",
    "emitter",
    "listener"
  ],
  "version": "0.0.7",
  "homepage": "http://github.com/pierrec/node-ev",
  "repository": {
    "type": "git",
    "url": "git://github.com/pierrec/node-ev.git"
  },
  "main": "./lib/ev.js",
  "bugs": {
    "url": "http://github.com/pierrec/node-ev/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/pierrec/node-ev/raw/master/LICENSE"
    }
  ],
  "engines": {
    "node": ">= 0.6"
  },
  "dependencies": {
    "fnutils": "latest"
  },
  "devDependencies": {
    "mocha": ">= 0.10",
    "bench": ">= 0.3"
  },
  "scripts": {
    "test": "mocha test/*-test.js"
  },
  "readme": "# README\n\n## Synopsis\n\nThis is yet another event emitter implementation for [node.js](http://nodejs.org). It is fully compatible (as of version 0.0.5) with the nodejs' _EventEmitter_ API, with some additions (cf. the Differences section below). The main purpose of node-ev is to provide very fast event emission when dealing with a relatively low number of listeners: below 20 listeners, it is faster than EventEmitter, after that, both average out.\n\n## Differences with node's _EventEmitter_\n\n* New methods\n\t* `off(event[, listener])`: alias to `removeListener()`\n\t* `addEventListener(event, listener)`: alias to `addListener()`\n\t* `emit_myevent([ arg1... ])`: alias for `emit('myevent'[, arg1... ])`\n* New member\n\t* `ev_dedupListener`: does not add a listener if already defined for a given event\n\n\n## API\n\n```javascript\nvar EV = require('ev')\nvar ev = new EV({ match: 1 })\n\nfunction test (a) {\n\tconsole.log('received', a)\n}\n\nev.on('match', test)\nev.emit('match', 'standard emit') // received standard emit\nev.emit_match('shortcut emit!') // received shortcut emit!\n```\n\n\n### Constructor\n\n`EV(events, flag`\n* `events` (_Object_): events object listing the possible events to be emitted and their corresponding number of arguments. Note that EV *will* emit events even though they may not have been set by the constructor but performance will be affected in highly demanding situations.\n* `flag` (_Boolean_): indicates whether warnings should be triggered (default=true)\n\n\n```javascript\n{\n\tdata: 3\n,\tend: 1\n, drain: 0\n}\n```\n\nThere are 3 events defined by default:\n\n* `error(Error)`: if emitted while no listener attached to it, it will throw as per _EventEmitter_'s behavior\n* `newListener(event, listener)`: emitted when a listener is attached to an event\n* `oldListener(event, listener)`: emitted when a listener is removed from an event\n\n\n### Members\n\n* `version` (_String_): EV version\n* `ev_dedupListener` (_Boolean_): will not add a listener more than once to the same event if true\n\n\n### Methods\n\n* `on(event, listener)` (_String_, _Function_): add a listener for [event]\n* `once(event, listener)` (_String_, _Function_): add a listener for [event] and remove it once triggered\n* `off(event, listener)` (_String_, _Function_): remove the listener for [event]\n* `off(event)` (_String_): remove all listeners for [event]\n* `removeAllListeners(event)` (_String_): remove all listeners for [event]\n* `removeAllListeners()`: remove all listeners for all events\n* `emit(event[, arguments])` (_String_[, _Any_]): emit [event] with a list of arguments\n* `setMaxListeners(max)` (_Integer_): set the maximum number of listeners after which a warning is issued, but the listeners are still added\n* `listeners([event])` (_String_): get the list of listeners for [event] or all listeners for all events\n",
  "_id": "ev@0.0.7",
  "dist": {
    "shasum": "a46b4c0f78c9dc854977b2452f99abc708fba6c8",
    "tarball": "http://registry.npmjs.org/ev/-/ev-0.0.7.tgz"
  },
  "maintainers": [
    {
      "name": "pierrec",
      "email": "pierre.curto@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "a46b4c0f78c9dc854977b2452f99abc708fba6c8",
  "_resolved": "https://registry.npmjs.org/ev/-/ev-0.0.7.tgz",
  "_from": "ev@>=0.0.3"
}
